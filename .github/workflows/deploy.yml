# .github/workflows/deploy.yml

name: Deploy API to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      EC2_HOST: "54.209.205.100"
      EC2_USER: "ubuntu"
      # Clave privada en una sola l√≠nea para evitar errores de formato de YAML.
      EC2_SSH_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEAwo19aoTAtwoexzEeoVQNwYqThIPDkQ30L2xmhCNfNxqfpSh0VJ8HBk1CDYyaxiqKia22rSS+nBsW/6qXT9Ug6FO0ifesrdW0uL66dAuKOWQSg4FQTlvsQFZ8RXyO81umYg9PdIlsWXmX8DVHSNR/YQe7XH56V2wUfdSPoyhQNzUT3ckRtixVezESRAgzOzaWQr88CN/tbWJ9Z8tR58MKd7G2plvVuwWbnjtpRynGe2+zHwPcTIsa7VMIELV2caeoU8UmvH1ISX55fseUvgKsYRh6Qx4q3FT/x4jtlWJwFZzKN7cZ0tTq0ABqk8NsndeuW0EqMMkXi1mtBdBTqqtVvQIDAQABAoIBAQC9meB496lMeOtn2qHsPZsuXBvJ0BO+gKfRs8XwzvwTGros3dEJSvYwmQhfZgDMUVc0N/xInv+36NqwDRNrdNyeLj1LG/nIa/W0+gOB5mEt7y3vxQ17YDBMvzxbB7nUxyPOevdHLkpOpKaDLZksDBObf0qEKKqYGjeaLZZSPo52TWvDcR89cHsQebt61Y5cSisujLWGbhekYDEL1eyz9s6NtYdmyTP+E8DFUb2YB8NuW9P3/hj0B15yO/a3oDVVOrehhq06Subi4cRk7HusOXdAejziNZSSKPgTTchqG6Q/0UEzHY05QwT1ZJi/PjxCmpxw/cQhdNhI1I49VFOLoW1hAoGBAOXEe4VmmmnWoCVYip77viG3MaOqZxCb10YUDjJt8FVjFmU2ivzPHg1w/qGDQHAFz5XTjabkFCWRiCUmAu+yzFf+3l+gtB6eh0BYnyCNRLmc6LxXXuLR0WFPrNxgsBTR/X7vKJutuCOZFOmjvNmW/SFXDIZI5X5611/X49l6aBX5AoGBANjDxK9qm0Dp3miCtkEbOvB//m8RZFH7AFeY2CXq4WU0+gT+u+Kk769DnwaZS3kGltFupT/G20o2vjh9VXS9Kj932QfWT6IfjcIdWTYWpN33z2lIJ4w2scS+1mWQHZg2CEwD9APkN/cG2Om9onWaapDA8GmAWm0ZjFJbw2feAJ7lAoGATAo3etGW/rnp7BIeZjkYFl5jTi/hxgxdNTMD88qQhCGz0rE3VC1TW81uZ5NhavFxXrtRoM7QoBJGxUyMIjnBCMovW+R6V7vNNQ1fNE2sVeVI3LPpkhUwPw04PwK8o1dPloedn8/hJd7OnffzUut2QGdnnLVZRf9vcaeoH1w0QDkCgYEAtMF7MDQbxuO+nTPyuxPz8D0rdH7yQxKl1GYWSHg3AGhO3P92uaaEYIhpAd2u+/sspPQ5RJeUoaxIr16EdlaP9mEAT/K8cRsS4P4MOHhlftt4z/hlUh0B3Giu6/5jT1wvSwQ45U3YBVxmYXPLF3puxsq9L5ziyvt08fCnX+PWbKkCgYEA0evRKp7lBga2l5atm8RU+7kJJEw45+BlFz2qvxTD5eX0/TCalB94YrGPYvV7hVq9GDCJU2e4CwMI+IadIrV2XSk5UnhqAfMlGRoLQTbJaFh5bgdDIt03r0l+2gHj+uLeJ5Gi8yFNZM61bpBrkjG5x6yjxV5NV8lCOWKfSqAdI+U=-----END RSA PRIVATE KEY-----"

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Execute Pre-Deployment Script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "--- Running Pre-Deploy ---"
            if [ -f /var/www/security-cam-project/scripts/pre-deploy.sh ]; then
              sudo bash /var/www/security-cam-project/scripts/pre-deploy.sh
            else
              echo "Pre-deploy script not found, skipping. (Normal on first deploy)"
            fi

      - name: 3. Clean Remote Directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "--- Cleaning Project Directory ---"
            if [ -d "/var/www/security-cam-project" ]; then
              sudo rm -rf /var/www/security-cam-project/*
            fi

      - name: 4. Copy Files to EC2
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          source: "./*"
          target: "/var/www/security-cam-project"

      - name: 5. Execute Post-Deployment Script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "--- Running Post-Deploy ---"
            sudo chmod +x /var/www/security-cam-project/scripts/*.sh
            sudo bash /var/www/security-cam-project/scripts/post-deploy.sh